{"ast":null,"code":"var _jsxFileName = \"/Users/nawarmohra/Quiz-app/src/components/quiz/play.js\";\nimport React, { Component, Fragment } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport M from 'materialize-css';\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-empty';\nimport correctNotification from '../../assets/audio/correct-answer.mp3';\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3';\nimport buttonNotification from '../../assets/audio/button-sound.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Play extends Component {\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n\n    this.displayQuestions = function () {\n      let questions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _this.state.questions;\n      let currentQuestion = arguments.length > 1 ? arguments[1] : undefined;\n      let nextQuestion = arguments.length > 2 ? arguments[2] : undefined;\n      let previousQuestion = arguments.length > 3 ? arguments[3] : undefined;\n      let {\n        currentQuestionIndex\n      } = _this.state;\n\n      if (!isEmpty(_this.state.questions)) {\n        questions = _this.state.questions;\n        currentQuestion = questions[currentQuestionIndex];\n        nextQuestion = questions[currentQuestionIndex + 1];\n        previousQuestion = questions[currentQuestionIndex - 1];\n        const answer = currentQuestion.answer;\n\n        _this.setState({\n          currentQuestion,\n          nextQuestion,\n          previousQuestion,\n          answer\n        });\n      }\n    };\n\n    this.handleOptionClick = e => {\n      if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()) {\n        this.correctAnswer();\n      } else {\n        this.wrongAnswer();\n      }\n    };\n\n    this.correctAnswer = () => {\n      M.toast({\n        html: 'correct Answer',\n        classes: ' toast-valid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        score: prevState.score + 1,\n        correctAnswers: prevState.correctAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    };\n\n    this.wrongAnswer = () => {\n      navigator.vibrate(1000);\n      M.toast({\n        html: 'wrong Answer',\n        classes: ' toast-invalid',\n        displayLength: 1500\n      });\n      this.setState(prevState => ({\n        wrongAnswers: prevState.wrongAnswers + 1,\n        currentQuestionIndex: prevState.currentQuestionIndex + 1,\n        numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions + 1\n      }), () => {\n        this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n      });\n    };\n\n    this.state = {\n      questions,\n      currentQuestion: {},\n      nextQuestion: {},\n      previousQuestion: {},\n      answer: '',\n      numberOfQuestions: 0,\n      numberOfAnsweredQuestions: 0,\n      currentQuestionIndex: 0,\n      score: 0,\n      correctAnswers: 0,\n      wrongAnswers: 0,\n      hints: 5,\n      fiftyFifty: 2,\n      usedFiftyFifty: false,\n      time: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      questions,\n      currentQuestion,\n      nextQuestion,\n      previousQuestion\n    } = this.state;\n    this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n  }\n\n  render() {\n    //console.log(questions);\n    const {\n      currentQuestion\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: \"Programming assignment - Quiz Page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"correct-sound\",\n          src: correctNotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"wrong-sound\",\n          src: wrongNotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          id: \"button-sound\",\n          src: buttonNotification\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lifeline-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mdi mdi-set-center mdi-24px lifeline-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"lifeline\",\n              children: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 96\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"mdi mdi-lightbulb mdi-24px lifeline-icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"lifeline\",\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"left\",\n              children: \"1/10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"right\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mdi mdi-clock-outline mdi-24px\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 53\n              }, this), \"1:30\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: currentQuestion.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.handleOptionClick,\n            className: \"option\",\n            children: currentQuestion.optionA\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.handleOptionClick,\n            className: \"option\",\n            children: currentQuestion.optionB\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"option-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.handleOptionClick,\n            className: \"option\",\n            children: currentQuestion.optionC\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            onClick: this.handleOptionClick,\n            className: \"option\",\n            children: currentQuestion.optionD\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Quit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Play;","map":{"version":3,"sources":["/Users/nawarmohra/Quiz-app/src/components/quiz/play.js"],"names":["React","Component","Fragment","Helmet","M","questions","isEmpty","correctNotification","wrongNotification","buttonNotification","Play","constructor","props","displayQuestions","state","currentQuestion","nextQuestion","previousQuestion","currentQuestionIndex","answer","setState","handleOptionClick","e","target","innerHTML","toLowerCase","correctAnswer","wrongAnswer","toast","html","classes","displayLength","prevState","score","correctAnswers","numberOfAnsweredQuestions","navigator","vibrate","wrongAnswers","numberOfQuestions","hints","fiftyFifty","usedFiftyFifty","time","componentDidMount","render","question","optionA","optionB","optionC","optionD"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { Helmet } from \"react-helmet\";\nimport M from 'materialize-css';\nimport questions from '../../questions.json';\nimport isEmpty from '../../utils/is-empty';\nimport correctNotification from '../../assets/audio/correct-answer.mp3'\nimport wrongNotification from '../../assets/audio/wrong-answer.mp3'\nimport buttonNotification from '../../assets/audio/button-sound.mp3'\n\n\nclass Play extends Component {\n    constructor (props) {\n        super (props);\n        this.state = {\n            questions,\n            currentQuestion: {},\n            nextQuestion: {},\n            previousQuestion: {},\n            answer: '',\n            numberOfQuestions: 0,\n            numberOfAnsweredQuestions: 0,\n            currentQuestionIndex: 0,\n            score: 0,\n            correctAnswers:0,\n            wrongAnswers:0,\n            hints: 5,\n            fiftyFifty: 2, \n            usedFiftyFifty: false,\n            time: {}\n        };\n    }\n\n    componentDidMount () {\n        const {questions, currentQuestion, nextQuestion, previousQuestion} = this.state\n        this.displayQuestions(questions, currentQuestion, nextQuestion, previousQuestion);\n    }\n\n    displayQuestions = (questions = this.state.questions, currentQuestion, nextQuestion, previousQuestion) => {\n        let { currentQuestionIndex} = this.state;\n        if (!isEmpty(this.state.questions)) {\n            questions = this.state.questions;\n            currentQuestion = questions[currentQuestionIndex];\n            nextQuestion = questions[currentQuestionIndex + 1];\n            previousQuestion = questions[currentQuestionIndex -1];\n            const answer = currentQuestion.answer;\n            this.setState ({\n                currentQuestion ,\n                nextQuestion,\n                previousQuestion,\n                answer\n            });\n        }\n    };\n\n    handleOptionClick = (e) => {\n        if (e.target.innerHTML.toLowerCase() === this.state.answer.toLowerCase()){\n            \n            this.correctAnswer();\n        } else {\n            this.wrongAnswer();\n        }\n    }\n\n    correctAnswer = () => {\n        M.toast({\n            html : 'correct Answer',\n            classes: ' toast-valid',\n            displayLength: 1500\n        });\n        this.setState(prevState => ({\n            score: prevState.score + 1,\n            correctAnswers: prevState.correctAnswers + 1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1, \n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions +1\n        }), () => {\n            this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n\n    }\n\n    wrongAnswer = () => {\n        navigator.vibrate(1000);\n        M.toast({\n            html : 'wrong Answer',\n            classes: ' toast-invalid',\n            displayLength: 1500\n        });\n        this.setState(prevState => ({\n            wrongAnswers: prevState.wrongAnswers +1,\n            currentQuestionIndex: prevState.currentQuestionIndex + 1, \n            numberOfAnsweredQuestions: prevState.numberOfAnsweredQuestions +1\n        }), () => {\n            this.displayQuestions(this.state.questions, this.state.currentQuestion, this.state.nextQuestion, this.state.previousQuestion);\n        });\n\n    }\n\n    render() {\n        //console.log(questions);\n        const { currentQuestion } = this.state\n\n        return (\n            <Fragment>\n                <Helmet><title>Programming assignment - Quiz Page</title></Helmet>\n                <Fragment>\n                    <audio id=\"correct-sound\" src={correctNotification}></audio>\n                    <audio id=\"wrong-sound\" src={wrongNotification}></audio>\n                    <audio id=\"button-sound\" src={buttonNotification}></audio>\n\n                </Fragment>\n                <div className=\"questions\">\n                    <div className=\"lifeline-container\">\n                        <p>\n                            <span className=\"mdi mdi-set-center mdi-24px lifeline-icon\"></span><span className=\"lifeline\">1</span>\n                        </p>\n                        <p>\n                            <span className=\"mdi mdi-lightbulb mdi-24px lifeline-icon\"></span><span className=\"lifeline\">5</span>\n                        </p>\n                    </div>\n                    <div className=\"timer-container\">\n                        <p>\n                            <span className=\"left\">1/10</span>\n                            <span className=\"right\"><span className=\"mdi mdi-clock-outline mdi-24px\"></span>1:30</span>\n                        </p>\n                    </div>\n                    <h5>{currentQuestion.question}</h5>\n                    <div className=\"option-container\"> \n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionA}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\" >{currentQuestion.optionB}</p>\n                    </div>\n                    <div className=\"option-container\"> \n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionC}</p>\n                        <p onClick={this.handleOptionClick} className=\"option\">{currentQuestion.optionD}</p>\n                    </div>\n                    <div className=\"button-container\">\n                        <button>Previous</button>\n                        <button>Next</button>\n                        <button>Quit</button>\n                    </div>\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport default Play;"]},"metadata":{},"sourceType":"module"}